/!
	<PageMap>
		<DataObject type="document">
			<Attribute name="title">Plezi - a Ruby framework for real-time web applications, with native Websockets, RESTful routing and CRUD support</Attribute>
			<Attribute name="author">Bo (Myst)</Attribute>
			<Attribute name="description">
				#{SCHEMA_ABOUT}
			</Attribute>
		</DataObject>
		<DataObject type="thumbnail">
			<Attribute name="src" value="#{request.base_url}/images/logo_thick_dark.png" />
			<Attribute name="width" value="656" />
			<Attribute name="height" value="256" />
		</DataObject>
	</PageMap>
a#ruby_lang href='https://www.ruby-lang.org/'
	img src='/images/ruby.png' alt='ruby'
javascript:
	ws = NaN
	handle = ''
	function onsubmit(e) {
		e.preventDefault();
		if($('#text')[0].value == '') {return false}
		if(ws && ws.readyState == 1) {
			ws.send($('#text')[0].value);
			$('#text')[0].value = '';
		} else {
			handle = $('#text')[0].value
			var url = (window.location.protocol.match(/https/) ? 'wss' : 'ws') + '://' + window.document.location.host + '/' + $('#text')[0].value
			ws = new WebSocket(url)
			ws.onopen = function(e) {
				output("<b>Connected :-)</b>");
				$('#text')[0].value = '';
				$('#text')[0].placeholder = 'your message';
			}
			ws.onclose = function(e) {
				output("<b>Disonnected :-/</b>")
				$('#text')[0].placeholder = 'nickname';
				$('#text')[0].value = handle
			}
			ws.onmessage = function(e) {
				output(e.data);
			}
		}
		return false;
	}
	function output(data) {
		$('#output').append("<li>" + data + "</li>")
		$('#output').animate({ scrollTop:
				$('#output')[0].scrollHeight }, "slow");
	}
h1#tagline Websockets for Ruby made easy
h3#version_data Version 0.15.x - Thinner, Leanner and Meaner - a Whole New Pub/Sub World
div#demo
	div#client
		div class='bordered'
			p Websockets? AJAX? RESTful HTTP? Pub/Sub? - Plezi.
			ul
				li Easier than Faye, more fun than socket.io.
				li Works on it's own or with Rack/Rails/Sinatra.
				li Takes performance to the edge of Pub/Sub capabilities.
			p A Pub/Sub chatroom was never easier.
			p
				a href='/docs/basics'  Get started now.
			form#form
				input type='text' id='text' name='text' placeholder='nickname' autocomplete="off"
				input type='submit' value='send'
			javascript:
				$('#form')[0].onsubmit = onsubmit
			ul id='output'
            a#sign href='/docs'
	div#code
		pre
			code class='ruby'
				|
					# finish with `exit` if running within `irb`
					require 'plezi'
					class ChatServer
					  def index
					    render 'client'
					  end
					  def on_open
					    return close unless params['id']
					    @name = params['id']
					    subscribe channel: "chat"
					    publish channel: "chat", message: "\#{@name} joind the chat."
					    write "Welcome, \#{@name}!"
					  end
					  def on_close
					    publish channel: "chat, message: "\#{@name} joind the chat."
					  end
					  def on_message data
					    publish channel: "chat", message: "\#{@name}: \#{data}"
					  end
					end
					# setup route to html/javascript client
					path_to_client = File.expand_path( File.dirname(__FILE__) )
					Plezi.templates = path_to_client
					# connect route to controller
					Plezi.route '/', ChatServer
input#show_code type='checkbox'
div id='client_code'
	pre
		code class='html'
			|
				&lt;!-- client.html.erb --&gt;
				&lt;!DOCTYPE html&gt;&lt;html&gt;
				&lt;head&gt;
					&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"&gt;&lt;/script&gt;
					&lt;script&gt;
						ws = NaN
						handle = ''
						function onsubmit(e) {
							e.preventDefault();
							if($('#text')[0].value == '') {return false}
							if(ws &amp;&amp; ws.readyState == 1) {
								ws.send($('#text')[0].value);
								$('#text')[0].value = '';
							} else {
								handle = $('#text')[0].value
								var url = (window.location.protocol.match(/https/) ? 'wss' : 'ws') +
								            '://' + window.document.location.host +
											'/' + $('#text')[0].value
								ws = new WebSocket(url)
								ws.onopen = function(e) {
									output("&lt;b&gt;Connected :-)&lt;/b&gt;");
									$('#text')[0].value = '';
									$('#text')[0].placeholder = 'your message';
								}
								ws.onclose = function(e) {
									output("&lt;b&gt;Disonnected :-/&lt;/b&gt;")
									$('#text')[0].value = '';
									$('#text')[0].placeholder = 'nickname';
									$('#text')[0].value = handle
								}
								ws.onmessage = function(e) {
									output(e.data);
								}
							}
							return false;
						}
						function output(data) {
							$('#output').append("&lt;li&gt;" + data + "&lt;/li&gt;")
							$('#output').animate({ scrollTop:
										$('#output')[0].scrollHeight }, "slow");
						}
					&lt;/script&gt;
				&lt;/head&gt;&lt;body&gt;
					&lt;form id='form'&gt;
						&lt;input type='text' id='text' name='text' placeholder='nickname'&gt;&lt;/input&gt;
						&lt;input type='submit' value='send'&gt;&lt;/input&gt;
					&lt;/form&gt;
					&lt;script&gt; $('#form')[0].onsubmit = onsubmit &lt;/script&gt;
					&lt;ul id='output'&gt;&lt;/ul&gt;
				&lt;/body&gt;
